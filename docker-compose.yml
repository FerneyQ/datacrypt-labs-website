# üê≥ DataCrypt Labs - Docker Compose Configuration
# Filosof√≠a Mejora Continua - Orquestaci√≥n completa para producci√≥n

version: '3.8'

services:
  # Main API Service
  datacrypt-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: datacrypt_api
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backups:/app/backups
      - ./ssl:/app/ssl
    environment:
      - PRODUCTION=true
      - DATABASE_URL=sqlite:///./data/datacrypt_production.db
    env_file:
      - .env.production
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - datacrypt_network

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: datacrypt_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass "datacrypt_redis_password"
    restart: unless-stopped
    networks:
      - datacrypt_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: datacrypt_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./ssl:/etc/ssl/certs
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - datacrypt-api
    restart: unless-stopped
    networks:
      - datacrypt_network

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus
    container_name: datacrypt_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - datacrypt_network

  # Grafana Dashboard (optional)
  grafana:
    image: grafana/grafana
    container_name: datacrypt_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=datacrypt_admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - datacrypt_network

networks:
  datacrypt_network:
    driver: bridge

volumes:
  redis_data:
  prometheus_data:
  grafana_data: